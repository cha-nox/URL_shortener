services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - easy_link
    restart: unless-stopped

  easy_link:
    image: easy_link:latest
    container_name: easy_link
    env_file:
      - ./.env
    depends_on:
      easy_link_data:
        condition: service_healthy
      easy_link_cache:
        condition: service_started
    restart: 'unless-stopped'

  easy_link_data:
    volumes:
      - easy_link_data:/var/lib/postgresql/data
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: 
      POSTGRES_PASSWORD: 
      POSTGRES_DB: easy_link
    restart: 'unless-stopped'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  easy_link_cache:
    volumes:
      - easy_link_cache:/data
    image: memcached:latest
    container_name: memcached
    command: ["memcached"]
    restart: 'unless-stopped'

volumes:
  easy_link_data:
  easy_link_cache: